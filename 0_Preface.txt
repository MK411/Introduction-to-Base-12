Question 1: Why do we use base 10?
Naturally, we have 2*5 fingers, so we count by 10.
Question 2: What's wrong with base 10?
10 is just 2*5, not divisible by 3.
Thus, 1/3 in base 10 is 0.333333(infinite 3s).
However, in daily life, we do need thirds that base 10 proves suboptimal.
But some may argue that without base 10, we could not do fifths well.
So let's probe into our first problem: For x from 1 to n-1, how many numbers satisfy gcd(x,n)=1?
First, we need a gcd algorithm:
def gcd(x,y):
    while(x>0 and y>0):
        if(x>=y):
            x=x%y
        else:
            y=y%x
    return x+y
Then, we'll do the main problem.
for x in range(2,25): #24 may be the top
    r=0
    for y in range(1,x):
        if(gcd(x,y)==1):
            r+=1
    print(r,x,round(r/x,6))
Then we get this:
1 2 0.5
2 3 0.666667
2 4 0.5
4 5 0.8
2 6 0.333333
6 7 0.857143
4 8 0.5
6 9 0.666667
4 10 0.4
10 11 0.909091
4 12 0.333333
12 13 0.923077
6 14 0.428571
8 15 0.533333
8 16 0.5
16 17 0.941176
6 18 0.333333
18 19 0.947368
8 20 0.4
12 21 0.571429
10 22 0.454545
22 23 0.956522
8 24 0.333333
In the output, it can be seen that compared to itself, a multiple of 6 has tle least such numbers.
So the base must be a multiple of 6. Just imagine that you had 6 fingers per hand, thus 12 fingers in total.
Thus comes 12-base, also known as duodecimal or dozenal.
